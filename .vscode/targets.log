make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.3
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2020 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu May 12 21:09:39 2022

# Variables

# environment
LC_ALL = C
# makefile (from 'Makefile', line 1)
PROJECT_NAME := astra Package
# environment
HOMEBREW_PREFIX = /home/linuxbrew/.linuxbrew
# environment
WSLENV = VSCODE_WSL_EXT_LOCATION/up
# environment
VSCODE_CWD = /mnt/c/Users/IvanSabelnikov/AppData/Local/Programs/Microsoft VS Code
# environment
NVM_DIR = /home/ivan/.nvm
# default
MAKE_COMMAND := make
# environment
VSCODE_HANDLES_SIGPIPE = true
# environment
GOPATH = /home/ivan/go
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
.VARIABLES := 
# environment
PWD = /home/ivan/projects/mapped/pulumi-astra
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
VSCODE_LOG_STACK = false
# automatic
%F = $(notdir $%)
# environment
NVM_INC = /home/ivan/.nvm/versions/node/v18.1.0/include/node
# environment
LANG = C
# makefile (from 'Makefile', line 4)
PACK := astra
# default
.LOADED := 
# environment
HOMEBREW_REPOSITORY = /home/linuxbrew/.linuxbrew/Homebrew
# default
.INCLUDE_DIRS = /usr/local/include /usr/include /usr/include
# makefile
MAKEFLAGS = pqrR
# makefile (from 'Makefile', line 6)
PROJECT := github.com/pulumi/pulumi-astra
# makefile
CURDIR := /home/ivan/projects/mapped/pulumi-astra
# environment
VSCODE_PIPE_LOGGING = true
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 14)
VERSION := 0.0.1-alpha.1652378870+dc5c38fa.dirty
# environment
MFLAGS = -pqrR
# default
.SHELLFLAGS := -c
# environment
NVM_BIN = /home/ivan/.nvm/versions/node/v18.1.0/bin
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST := Makefile
# automatic
@F = $(notdir $@)
# environment
VSCODE_VERBOSE_LOGGING = true
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
*F = $(notdir $*)
# environment
MANPATH = /home/linuxbrew/.linuxbrew/share/man:
# makefile (from 'Makefile', line 16)
TESTPARALLELISM := 4
# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# default
MAKE_HOST := x86_64-pc-linux-gnu
# makefile (from 'Makefile', line 10)
VERSION_PATH := provider/pkg/version.Version
# environment
INFOPATH = /home/linuxbrew/.linuxbrew/share/info:
# makefile (from 'Makefile', line 3)
SHELL := /bin/bash
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# environment
PATH = /usr/local/go/bin:/home/ivan/.vscode-server/bin/da15b6fd3ef856477bf6f4fb29ba1b7af717770d/bin/remote-cli:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/home/ivan/.nvm/versions/node/v18.1.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Microsoft SDKs/Azure/CLI2/wbin:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/TortoiseGit/bin:/mnt/c/Program Files/nodejs/:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/ProgramData/chocolatey/bin:/mnt/c/ProgramData/chocolatey/lib/pulumi/tools/Pulumi/bin:/mnt/c/Users/IvanSabelnikov/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/IvanSabelnikov/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/IvanSabelnikov/AppData/Roaming/npm:/snap/bin:/home/ivan/.dotnet/tools
# default
MAKEFILES := 
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 12)
TFGEN := pulumi-tfgen-astra
# makefile (from 'Makefile', line 5)
ORG := pulumi
# environment
VSCODE_LOG_NATIVE = false
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# automatic
?F = $(notdir $?)
# environment
NAME = ivan-pc
# makefile (from 'Makefile', line 9)
PROVIDER_PATH := provider
# environment
HOSTTYPE = x86_64
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# automatic
+F = $(notdir $+)
# environment
WSL_INTEROP = /run/WSL/31634_interop
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 20)
OS := Linux
# makefile (from 'Makefile', line 7)
NODE_MODULE_NAME := @pulumi/astra
# environment
LOGNAME = ivan
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/IvanSabelnikov/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.2
# makefile
.DEFAULT_GOAL := prepare
# environment
USER = ivan
# default
MAKE_VERSION := 4.3
# 'override' directive
.SHELLSTATUS := 0
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
HOMEBREW_CELLAR = /home/linuxbrew/.linuxbrew/Cellar
# environment
_ = /home/ivan/.vscode-server/bin/da15b6fd3ef856477bf6f4fb29ba1b7af717770d/node
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-63a0deae-dc3f-4be3-a9a3-9f7eb62804fd.sock
# environment
NVM_CD_FLAGS = 
# environment
GOMODCACHE = /home/ivan/go/pkg/mod
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/ivan
# environment
TERM = xterm-256color
# makefile (from 'Makefile', line 8)
TF_NAME := astra
# environment
GOPROXY = https://proxy.golang.org,direct
# default
.RECIPEPREFIX := 
# automatic
<F = $(notdir $<)
# default
SUFFIXES := 
# makefile (from 'Makefile', line 13)
PROVIDER := pulumi-resource-astra
# environment
WSL_DISTRO_NAME = Ubuntu-22.04
# makefile (from 'Makefile', line 18)
WORKING_DIR := /home/ivan/projects/mapped/pulumi-astra
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell nocomment grouped-target extra-prereqs archives jobserver output-sync check-symlink load
# makefile (from 'Makefile', line 21)
EMPTY_TO_AVOID_SED := ""
# variable set hash-table stats:
# Load=95/1024=9%, Rehash=0, Collisions=8/156=5%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2096, inode 46593): 18 files, no impossibilities.

# 18 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

install_go_sdk::
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

install_python_sdk::
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build_sdks:: install_plugins provider build_nodejs build_python build_go build_dotnet
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-12 21:08:52.501137
#  File has been updated.
#  Successfully updated.

only_build:: build
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean::
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 105):
	rm -rf sdk/{dotnet,nodejs,go,python}

development:: install_plugins provider lint_provider build_sdks install_sdks cleanup
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

install_nodejs_sdk::
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 120):
	yarn link --cwd $(WORKING_DIR)/sdk/nodejs/bin

# 'override' directive
build_dotnet: .SHELLSTATUS := 0
# makefile (from 'Makefile', line 81)
build_dotnet: DOTNET_VERSION := 0.0.1-alpha.1652378870+dc5c38fa.dirty
build_dotnet:: install_plugins tfgen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=2/32=6%, Rehash=0, Collisions=0/6=0%
#  recipe to execute (from 'Makefile', line 83):
	pulumictl get version --language dotnet
	$(WORKING_DIR)/bin/$(TFGEN) dotnet --overlays provider/overlays/dotnet --out sdk/dotnet/
	cd sdk/dotnet/ && \
		echo "${DOTNET_VERSION}" >version.txt && \
        dotnet build /p:Version=${DOTNET_VERSION}

tfgen:: install_plugins
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 51):
	(cd provider && go build -o $(WORKING_DIR)/bin/${TFGEN} -ldflags "-X ${PROJECT}/${VERSION_PATH}=${VERSION}" ${PROJECT}/${PROVIDER_PATH}/cmd/${TFGEN})
	$(WORKING_DIR)/bin/${TFGEN} schema --out provider/cmd/${PROVIDER}
	(cd provider && VERSION=$(VERSION) go generate cmd/${PROVIDER}/main.go)

build_go:: install_plugins tfgen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 90):
	$(WORKING_DIR)/bin/$(TFGEN) go --overlays provider/overlays/go --out sdk/go/

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

install_dotnet_sdk::
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 112):
	mkdir -p $(WORKING_DIR)/nuget
	find . -name '*.nupkg' -print -exec cp -p {} ${WORKING_DIR}/nuget \;

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

provider:: tfgen install_plugins
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 56):
	(cd provider && go build -o $(WORKING_DIR)/bin/${PROVIDER} -ldflags "-X ${PROJECT}/${VERSION_PATH}=${VERSION}" ${PROJECT}/${PROVIDER_PATH}/cmd/${PROVIDER})

help::
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 100):
	@grep '^[^.#]\+:\s\+.*#' Makefile | \
 	sed "s/\(.\+\):\s*\(.*\) #\s*\(.*\)/`printf "\033[93m"`\1`printf "\033[0m"`	\3 [\2]/" | \
 	expand -t20

build:: install_plugins provider build_sdks install_sdks
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

prepare::
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 24):
	@if test -z "${NAME}"; then echo "NAME not set"; exit 1; fi
	@if test -z "${REPOSITORY}"; then echo "REPOSITORY not set"; exit 1; fi
	@if test ! -d "provider/cmd/pulumi-tfgen-x${EMPTY_TO_AVOID_SED}yz"; then "Project already prepared"; exit 1; fi
	mv "provider/cmd/pulumi-tfgen-x${EMPTY_TO_AVOID_SED}yz" provider/cmd/pulumi-tfgen-${NAME}
	mv "provider/cmd/pulumi-resource-x${EMPTY_TO_AVOID_SED}yz" provider/cmd/pulumi-resource-${NAME}
	if [[ "${OS}" != "Darwin" ]]; then \
		sed -i 's,github.com/pulumi/pulumi-astra,${REPOSITORY},g' provider/go.mod; \
		find ./ ! -path './.git/*' -type f -exec sed -i 's/[x]yz/${NAME}/g' {} \; &> /dev/null; \
	fi
	# In MacOS the -i parameter needs an empty string to execute in place.
	if [[ "${OS}" == "Darwin" ]]; then \
		sed -i '' 's,github.com/pulumi/pulumi-astra,${REPOSITORY},g' provider/go.mod; \
		find ./ ! -path './.git/*' -type f -exec sed -i '' 's/[x]yz/${NAME}/g' {} \; &> /dev/null; \
	fi

test::
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 125):
	cd examples && go test -v -tags=all -parallel ${TESTPARALLELISM} -timeout 2h

# 'override' directive
build_nodejs: .SHELLSTATUS := 0
# makefile (from 'Makefile', line 60)
build_nodejs: VERSION := v0.0.1-alpha.1652378870+dc5c38fa.dirty
build_nodejs:: install_plugins tfgen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=2/32=6%, Rehash=0, Collisions=0/6=0%
#  recipe to execute (from 'Makefile', line 62):
	$(WORKING_DIR)/bin/$(TFGEN) nodejs --overlays provider/overlays/nodejs --out sdk/nodejs/
	cd sdk/nodejs/ && \
        yarn install && \
        yarn run tsc && \
		cp -R scripts/ bin && \
        cp ../../README.md ../../LICENSE package.json yarn.lock ./bin/ && \
		sed -i.bak -e "s/\$${VERSION}/$(VERSION)/g" ./bin/package.json

cleanup::
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 96):
	rm -r $(WORKING_DIR)/bin
	rm -f provider/cmd/${PROVIDER}/schema.go

install_sdks:: install_dotnet_sdk install_python_sdk install_nodejs_sdk
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

lint_provider:: provider
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 93):
	cd provider && golangci-lint run -c ../.golangci.yml

.PHONY: development provider build_sdks build_nodejs build_dotnet build_go build_python cleanup
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

install_plugins::
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 108):
	[ -x $(shell which pulumi) ] || curl -fsSL https://get.pulumi.com | sh
	pulumi plugin install resource random 4.3.1

# 'override' directive
build_python: .SHELLSTATUS := 0
# makefile (from 'Makefile', line 70)
build_python: PYPI_VERSION := 0.0.1a1652378870+dirty
build_python:: install_plugins tfgen
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=2/32=6%, Rehash=0, Collisions=0/6=0%
#  recipe to execute (from 'Makefile', line 72):
	$(WORKING_DIR)/bin/$(TFGEN) python --overlays provider/overlays/python --out sdk/python/
	cd sdk/python/ && \
        cp ../../README.md . && \
        python3 setup.py clean --all 2>/dev/null && \
        rm -rf ./bin/ ../python.bin/ && cp -R . ../python.bin && mv ../python.bin ./bin && \
        sed -i.bak -e 's/^VERSION = .*/VERSION = "$(PYPI_VERSION)"/g' -e 's/^PLUGIN_VERSION = .*/PLUGIN_VERSION = "$(VERSION)"/g' ./bin/setup.py && \
        rm ./bin/setup.py.bak && \
        cd ./bin && python3 setup.py build sdist

# files hash-table stats:
# Load=27/1024=3%, Rehash=0, Collisions=0/113=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 45 / storage = 493 B / avg = 10 B
# current buf: size = 8162 B / used = 493 B / count = 45 / avg = 10 B

# strcache performance: lookups = 116 / hit rate = 61%
# hash-table stats:
# Load=45/8192=1%, Rehash=0, Collisions=0/116=0%
# Finished Make data base on Thu May 12 21:09:39 2022

 
