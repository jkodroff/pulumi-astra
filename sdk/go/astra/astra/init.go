// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package astra

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-astra/sdk/go/astra"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "index:astra/accessList:AccessList":
		r = &AccessList{}
	case "index:astra/database:Database":
		r = &Database{}
	case "index:astra/keyspace:Keyspace":
		r = &Keyspace{}
	case "index:astra/privateLink:PrivateLink":
		r = &PrivateLink{}
	case "index:astra/privateLinkEndpoint:PrivateLinkEndpoint":
		r = &PrivateLinkEndpoint{}
	case "index:astra/role:Role":
		r = &Role{}
	case "index:astra/token:Token":
		r = &Token{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := astra.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"astra",
		"astra/accessList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"astra",
		"astra/database",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"astra",
		"astra/keyspace",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"astra",
		"astra/privateLink",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"astra",
		"astra/privateLinkEndpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"astra",
		"astra/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"astra",
		"astra/token",
		&module{version},
	)
}
